{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/Statistics/Statistics.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","s","container","Propypes","PropTypes","node","Section","title","FeedbackOptions","options","onLeaveFeedback","feedbackContainer","map","option","index","feedbackButton","type","onClick","str","toUpperCase","Statistics","good","neutral","bad","total","positivePercentage","statisticsConstiner","protTypes","number","isRequired","Notification","message","notificationText","string","App","useState","setGood","setNeutral","setBad","states","valuesState","Object","values","kaysState","keys","totalAmount","reduce","acc","value","positiveFeedback","positive","res","Math","round","Number","isNaN","countPositiveFeedbackPercentage","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1814a107.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackContainer\":\"FeedbackOptions_feedbackContainer__ey8mD\",\"feedbackButton\":\"FeedbackOptions_feedbackButton__1vnGR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__jM2Y7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__195Cn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticsConstiner\":\"Statistics_statisticsConstiner__1ayd_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notificationText\":\"Notification_notificationText__12okS\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Container.module.css\";\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.Propypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nfunction Section({ title, children }) {\n  return (\n    <div>\n      {<h2 className={s.title}>{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","// import \"./FeedbackOptions.css\";\nimport s from \"./FeedbackOptions.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  const changeCase = (str) => str.toUpperCase();\n  return (\n    <div className={s.feedbackContainer}>\n      {options.map((option, index) => (\n        <button\n          className={s.feedbackButton}\n          key={index}\n          type=\"button\"\n          onClick={() => onLeaveFeedback(option)}\n        >\n          {changeCase(option)}\n        </button>\n      ))}\n    </div>\n  );\n}\nFeedbackOptions.propTypes = {\n  option: PropTypes.array,\n  onLeaveFeedback: PropTypes.func,\n};\nexport default FeedbackOptions;\n","import React from \"react\";\nimport s from \"./Statistics.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div className={s.statisticsConstiner}>\n      <p className=\"feedback__statistics\">Good: {good}</p>\n      <p className=\"feedback__statistics\">Neutral: {neutral}</p>\n      <p className=\"feedback__statistics\">Bad: {bad}</p>\n      <p className=\"feedback__statistics\">Total: {total}</p>\n      <p className=\"feedback__statistics\">\n        Positive feedback: {positivePercentage}%\n      </p>\n    </div>\n  );\n};\n\nStatistics.protTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => (\n  <p className={s.notificationText}>{message}</p>\n);\n\nNotification.protTypes = {\n  message: PropTypes.string.isRequired,\n};\nexport default Notification;\n","import \"./App.css\";\nimport Container from \"./components/Container\";\nimport Section from \"./components/Section\";\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from \"./components/Notification/Notification\";\n\nimport { useState } from \"react\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const states = { good, neutral, bad };\n\n  const hendleClick = (key) => {\n    switch (key) {\n      case \"good\":\n        setGood(() => good + 1);\n        break;\n      case \"neutral\":\n        setNeutral(() => neutral + 1);\n        break;\n      case \"bad\":\n        setBad(() => bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = (arr) => {\n    return arr.reduce((acc, value) => acc + +value, 0);\n  };\n  const countPositiveFeedbackPercentage = (total, positive) => {\n    let res = Math.round((100 / total) * positive);\n    if (Number.isNaN(res)) {\n      return 0;\n    }\n    return res;\n  };\n\n  const valuesState = Object.values(states);\n  const kaysState = Object.keys(states);\n  const totalAmount = countTotalFeedback(valuesState);\n  const positiveFeedback = countPositiveFeedbackPercentage(totalAmount, good);\n\n  return (\n    <Container>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={kaysState} onLeaveFeedback={hendleClick} />\n      </Section>\n      <Section title=\"Statistics\">\n        {totalAmount !== 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalAmount}\n            positivePercentage={positiveFeedback}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}